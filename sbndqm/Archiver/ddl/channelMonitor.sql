
\echo :GROUP_NAME
\echo :METRIC
\echo :MONITOR_TYPE
\echo :CH1
\echo :CHN

CREATE OR REPLACE FUNCTION RUNCON_PRD.MONMON(GROUP_NAME CHARACTER, 
       	  	  	          METRIC     CHARACTER, 
                                  MTYPE      INTEGER,
                                  CH1        INTEGER,
                                  CHN        INTEGER)
  RETURNS CHARACTER VARYING(32) AS 
$BODY$
  DECLARE 
    MONITOR_NAMED CHARACTER VARYING(32);
    TABLE_NAME CHARACTER VARYING(128);
    CTR        INTEGER;
  BEGIN
    MONITOR_NAMED := (SELECT TYPE_NAME FROM RUNCON_PRD.MONITOR_TYPES WHERE MONITOR_TYPE=MTYPE);
    TABLE_NAME := LOWER(GROUP_NAME || '_' || METRIC || '_' || MONITOR_NAMED || '_MONITOR');
    RAISE NOTICE 'Table Name: %',TABLE_NAME;
    EXECUTE FORMAT('
      CREATE TABLE RUNCON_PRD.%I 
      (
        CHANNEL_ID    INTEGER NOT NULL,
        SMPL_TIME     TIMESTAMP WITH TIME ZONE NOT NULL,
        SMPL_VALUE    DOUBLE PRECISION,
        PRIMARY KEY   (CHANNEL_ID,SMPL_TIME)
      )',TABLE_NAME);
      CTR := CH1;
      WHILE CTR <= CHN LOOP
        EXECUTE FORMAT('
          INSERT INTO RUNCON_PRD.MONITOR_MAP VALUES (%L,%L,%L,%L,%L,3600,NOW())
        ',GROUP_NAME,METRIC,CTR,MTYPE,TABLE_NAME);
        CTR := CTR + 1;
      END LOOP;
    RETURN TABLE_NAME;
  END
$BODY$
LANGUAGE plpgsql;

SELECT RUNCON_PRD.MONMON(:GROUP_NAME,:METRIC,:MONITOR_TYPE,:CH1,:CHN);

