#include "redis_connection.fcl"

physics:
{
  analyzers:
  {
    ExampleTimeStream: {
      module_type: ExampleTimeStream
      sleep_time: 1

      metric_config: {
        // Each group name, mapping to the list of instances for this group
        // The list of instances are the set of instances that you send metrics
        // to in this group. To make the config more concise, if using instance
        // names which are sequential numbers you can also provide a pair
        // of [lo, hi) and it will count as instance names lo,lo+1,...,hi-1
        groups: {
          example: [ [0, 10] ]
          // could also be
          // example: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
          // or
          // example: [[0,8], 8, 9]
        }

        // The names of the streams __must__ be the names of the redis_key_postfix's
        // for each instance in 'metrics' with the initial colon (':') stripped
        streams: [slow, fast]

        metrics: {
          rms: {
            // NOTE: all configs for each metric are optional

            // default range over which to display metric
            display_range: [0., 10.]
            // if the metric leaves this range, issue a warning
            warning_range: [1., 5.]
            // if the metric leaves this range, issue an alarm
            alarm_range: [0.5, 7.5]
            // units of metric
            units: ADC
            // title of the metric to be shown in displays

            // The title of the metric will be formatted in python
            // passed the parameters "group" and "instance" as strings
            // So, or this title, given the group "example" and instance
            // "1", the title would be: "example Wire 1 RMS" 
            titie: "%(group)s Wire %(instance)s RMS"
          }
        }
      }
    }
  }
  a: [ExampleTimeStream]
  end_paths: [a]
}

source:
{
  module_type: EmptyEvent
}

services:
{
  RedisConnection: @local::redis_connection
  InitMetricManager: {
    connections: {
      fast: @local::redis_metric_fast
      slow: @local::redis_metric_slow
      archive: @local::redis_metric_archive
    }
  }
}

process_name: EXAMPLESTREAM
