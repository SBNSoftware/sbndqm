#include "redis_connection.fcl"

process_name: Dump

services: {
  TFileService: { fileName: "crt_test_1.root" }
  RedisConnection: {
    host: "icarus-db01.fnal.gov"
  }
#  message: @local::standard_debug
  InitMetricManager: {
    connections: {
      #fast: @local::redis_metric_fast
      #slow: @local::redis_metric_slow
      archive: @local::redis_metric_archive
    }
  }
}

#source is a root file
source:
{
  module_type: RootInput
  maxEvents:   9999999        # Number of events to create
}

outputs:
{
}

physics:
{

 producers:{}

 filters:{}

 analyzers:{

   crtana: {
     module_type: BernCRTdqm

    metric_board_config: {
	groups:{
                CRT_board:[[1,97]] // CHANGE: to whatever channels the CRT analysis is processing
		}                  //missing 2, 12, 18, 20
	streams:[archiving]
		
	metrics:{
		TS0:{}
		TS1:{}
		n_events:{}
		MaxADCValue:{}
		baseline:{}	

                earlysynch:{alarmrange: [-100000,100000] }
                latesynch:{ alarmrange: [-100000,100000] }

                lastbighit:{ alarmrange: [0,100000000] }
}
}
    metric_channel_config: {
	groups:{
                CRT_channel:[[0,256]]
	}
	streams:[slow,fast]

        metrics:{
                ADC:{
			display_range: [0, 5000]
		}
		}	
	}

}

 }


 #define the output stream, there could be more than one if using filters 
 stream1:  [ ]
 ana: [ crtana ]

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ ana ]  
}
