#include "redis_connection.fcl"
#include "opticaldetectormodules.fcl"
#include "decoderdefs_icarus.fcl"
#include "services_common_icarus.fcl"

#analysis configuration pieces
BEGIN_PROLOG

icarus_opreco_pedestal_rmsslider: @local::standard_algo_pedestal_ub
icarus_opreco_pedestal_rmsslider.BeamGateSamples:   1
icarus_opreco_pedestal_rmsslider.SampleSize:        30
icarus_opreco_pedestal_rmsslider.Threshold:         4.0
icarus_opreco_pedestal_rmsslider.Verbose:           false
icarus_opreco_pedestal_rmsslider.NWaveformsToFile:  0
icarus_opreco_pedestal_rmsslider.MaxSigma:          4.0
icarus_opreco_pedestal_rmsslider.PedRangeMax:       16000
icarus_opreco_pedestal_rmsslider.PedRangeMin:       13000
icarus_opreco_pedestal_rmsslider.NumPreSample:      10
icarus_opreco_pedestal_rmsslider.NumPostSample:     20

icarus_opreco_hit_slidingwindow: @local::standard_algo_slidingwindow
icarus_opreco_hit_slidingwindow.PositivePolarity:    false
icarus_opreco_hit_slidingwindow.NumPreSample:        5
icarus_opreco_hit_slidingwindow.NumPostSample:       10
icarus_opreco_hit_slidingwindow.ADCThreshold:        10 # ADC threshold (absolute) above pedestal mean to fire a pulse
icarus_opreco_hit_slidingwindow.NSigmaThreshold:     3 # ADC threshold (N*pedestal sigma) above pedestal mean to fire a pulse
icarus_opreco_hit_slidingwindow.TailADCThreshold:    6 # ADC threshold (absolute) below which next pulse is allowed to fire
icarus_opreco_hit_slidingwindow.TailNSigmaThreshold: 2 # ADC threshold (N*pedestal sigma) below which next pulse is allowed to fire
icarus_opreco_hit_slidingwindow.EndADCThreshold:     3 # ADC threshold (absolute) at which the pulse ends
icarus_opreco_hit_slidingwindow.EndNSigmaThreshold:  1 # ADC threshold (N*pedetal sigma) at which the pulse ends
icarus_opreco_hit_slidingwindow.MinPulseWidth:       5 # The width of a pulse needs to be equal or larger than this to be recorded
icarus_opreco_hit_slidingwindow.Verbosity:           false


tpclabels_daq: ["daq:PHYSCRATEDATATPCEE","daq:PHYSCRATEDATATPCEW","daq:PHYSCRATEDATATPCWE","daq:PHYSCRATEDATATPCWW"]
tpclabels_DecoderRaw: ["daqTPC:PHYSCRATEDATATPCEERAW","daqTPC:PHYSCRATEDATATPCEWRAW","daqTPC:PHYSCRATEDATATPCWERAW","daqTPC:PHYSCRATEDATATPCWWRAW"]
tpclabels_DecoderDenoised: ["daqTPC:PHYSCRATEDATATPCEE","daqTPC:PHYSCRATEDATATPCEW","daqTPC:PHYSCRATEDATATPCWE","daqTPC:PHYSCRATEDATATPCWW"]

analysis_config: {
  // producer of digits and header info
  raw_digit_producers: [@sequence::tpclabels_DecoderRaw]
#  raw_digit_instance: RAW
  header_producer: ""

  // channel info
  channel_info: {
    n_channels: 55296 # ALL crates
    collection_channels: [[0,55296]] # no signal -- plane is arbitrary
    induction_channels: []
  }

  // standard analysis config
  threshold_calc: 3
  threshold_sigma: 5
  noise_range_sampling: 1
  n_smoothing_samples: 1
  baseline_calc: 2
  n_mode_skip: 3
  use_planes: false
  refine_baseline: false

  // turn on for analysis information printed out on stdin
  verbose: false
  // turn on for timing information printed out on stdin
  timing: false

  // turn on to save waveform in output ChannelData
  fill_waveforms: false

  // turn on to output ReducedChannelData objects instead of
  // ChannelData (will throw out waveform and FFT info)
  reduce_data: false

  // number of headers per event provided by input (will be ignored if value is negative)
  // 10 for SBND
  n_headers: -1

  // Change tick period to be 0.4 for ICARUS
  tick_period: 0.4
}
END_PROLOG


###use icaruscode decoder.fcl as a base
#include "decoder.fcl"


#service overrides
services.RedisConnection: @local::redis_connection
services.RedisConnection.host: "icarus-db01.fnal.gov"
services.InitMetricManager: {
  connections: {
    archiving: {
      level: 3
      metricPluginType: "redis"
      reporting_interval: 60.0 # 60s
      verbose: true
      // need to add postfix otherwise this metric sender and the other one will collide
      redis_key_postfix: ":archiving"
      send_zeros: false
    }
  }
}
services.ArtdaqSharedMemoryServiceInterface:
{
  service_provider: "ArtdaqSharedMemoryService"
}
services.NuRandomService: @erase
services.MemoryTracker: @erase
services.TimeTracker: @erase
services.DetectorPropertiesService: @erase
services.DetectorClocksService: @local::icarus_detectorclocks
services.SignalShapingICARUSService: @erase
services.TFileService.fileName: "/dev/null"


#replace the source
source:
{
  module_type: TransferInput
  register_fragment_types: false
  # The timeout shouldn't be much smaller than the period between events, otherwise
  # there's a spew of timeout messages
  timeoutInUsecs: 50000000

  commanderPluginType: xmlrpc
  dispatcherHost: localhost
  dispatcherPort: 6020

  transfer_plugin: {

     unique_label: "OnlineMonitor"
      transferPluginType: Shmem
      shm_key: 0x40471454
      max_fragment_size_words: 100000000 #58543672 #33554432
      #max_event_size_bytes: 468349376
      first_event_builder_rank: 0
          source_rank: 5
          destination_rank: 6
  }

  dispatcher_config: {
    unique_label: "OnlineMonitor"
    path: [ out ]
    physics: {}
    outputs: {
      out: {
        module_type: TransferOutput
        transfer_plugin: {

           unique_label: "OnlineMonitor"
            transferPluginType: Shmem

            shm_key: 0x40471454

            max_fragment_size_words: 100000000 #58543672 #33554432
              first_event_builder_rank: 0
              destination_rank: 6
        }
      }
    }
  }
}

#decoder output
outputs.decodedout:{
  module_type: RootOutput
  fileName:    "/data/onmon_files/onmon_output_%r_%s_%tc_%#-decoded.root"
  dataTier:    "raw"
  compressionLevel: 3
  SelectEvents: [pscale_OnMonFiles]

  fileProperties: { 
    #maxSubRuns: 1 
    #maxRuns: 1 
    maxEvents: 1
  }
}

physics.producers.daqTPC: @local::physics.producers.daqTPC
physics.producers.daqTPC.FragmentsLabelVec: [ @sequence::tpclabels_daq ]
physics.producers.daqTPC.OutputRawWaveform: true

physics.producers.daqPMT:
{
  module_type: DaqDecoderIcarusPMT
  FragmentLabels: [ "daq:CAENV1730", "daq:ContainerCAENV1730" ]
}

physics.producers.daqTrigger: @local::decodeTrigger

#add online purity producers
physics.producers.purityana0:
{
  RawModuleLabel: [@sequence::tpclabels_DecoderDenoised] 
  module_type:    "ICARUSPurityDQM"
  ValoreTauFCL:  600000.
  CryostatFCL: 0
  PlaneFCL: 2
  ThresholdFCL: 3
  PersistPurityInfo: false
  FillAnaTuple: false
}
physics.producers.purityana1: @local::physics.producers.purityana0
physics.producers.purityana1.CryostatFCL: 1


#declare a filters section
physics.filters:
{
  prescale2:{ 
    module_type: "Prescaler"
    prescaleFactor: 2
    prescaleOffset: 0
  }
  prescale10:{ 
    module_type: "Prescaler"
    prescaleFactor: 10
    prescaleOffset: 0
  }
  prescale20:{ 
    module_type: "Prescaler"
    prescaleFactor: 20
    prescaleOffset: 0
  }
  prescale100:{ 
    module_type: "Prescaler"
    prescaleFactor: 100
    prescaleOffset: 0
  }
}

##override the analyzers section
physics.analyzers:
{
  Meta: {
    module_type: ReportMetadata
    RedisKey: eventmetaTPC

    SelectEvents: [tpc_only]
  }

  MetaPMT: {
    module_type: ReportMetadata
    RedisKey: eventmetaPMT

    SelectEvents: [pmt_only]
  }

  OnlineAnalysisRawData: {
    module_type: OnlineAnalysis
    @table::analysis_config
    send_metrics: false
    send_waveforms: true
    send_ffts: true
    fft_name: fft
    waveform_name: waveform
    fft_per_channel: true # calculate FFT's
    wait_period: -1 # s
    send_time_avg_ffts: false
    n_evt_fft_avg: 100
    n_evt_send_rawdata: 10
    // send_correlation_matrix: true
    // correlation_matrix_name: correlation
    // n_correlation_matrix_samples: 100

    SelectEvents: [tpc_only]
  }
  
     triggerAnalysis: {

      module_type: TriggerStreams
      
      TriggerLabel: "daqTrigger"      
      
      TriggerMetricConfig: {

        hostname: "icarus-db01.fnal.gov"
  
        streams: ["30s"]
        
        metrics: {
	    Offbeam_BNB_RATE:{
		units: Hz 
		title: "Offbeam BNB triggers rate"
		display_range:[0, 2]
	    }
            BNB_RATE:{
                units: Hz
                title: "Offbeam BNB triggers rate"
                display_range:[0, 2]
            }
            Offbeam_NuMI_RATE:{
                units: Hz
                title: "Offbeam BNB triggers rate"
                display_range:[0, 2]
            }
            NuMI_RATE:{
                units: Hz
                title: "Offbeam BNB triggers rate"
                display_range:[0, 2]
            }
	    Unknown_RATE:{
		units: Hz
                title: "Offbeam BNB triggers rate"
                display_range:[0, 2]
            }		 
	}   
      }

   pmtAnalysis: {

      module_type: CAENV1730Streams
      

      OpDetWaveformLabel: "daqPMT"

      reco_man:      @local::standard_preco_manager
      HitAlgoConfig: @local::icarus_opreco_hit_slidingwindow
      PedAlgoConfig: @local::icarus_opreco_pedestal_rmsslider 


      PMTMetricConfig: {

        hostname: "icarus-db01.fnal.gov"
    
        groups: {
            PMT: [ [0, 380] ]
        }

        streams: ["archiving"]
        
        metrics: {
        
          rms: {
            units: ADC
            title: "PMT channel %(instance)s rms"
            display_range: [0., 50.]
          }

          baseline: {
            units: ADC
            title: "%(group)s channel %(instance)s Pedestal"
            display_range: [13000, 16000]
          }
          
          rate: {
            untis: Hz 
            title: "%(group)s channel %(instance)s single PMT rate" 
            display_range: [ 100000, 300000 ]
          }

        }   
      }
      SelectEvents: [pmt_only]
    }

  PurityAnalysis:{
    module_type: TPCPurityDQMSender
    group_name: tpc_purity

    PurityInfoLabels: [purityana0,purityana1]
    PrintInfo: true
    MinTracksToReport: 100

    metric_config: {
      streams: ["archiving"]
      groups: {
        tpc_purity:["EastCryostat","WestCryostat"]
      }
      metrics:{
        attenuation_raw:{
	  units: "ms-1"
	  display_range: [0,2]
        }
        lifetime_raw:{
	  units: ms
	  display_range: [0,20]
        }
      }
    } 
    SelectEvents: [online_purity]
  }

  TPCOnlineAnalysis: {
    module_type: OnlineAnalysis
    group_name: tpc_channel
    @table::analysis_config


    metric_config: {
      streams: ["archiving"]
      groups: {
	tpc_channel:[[0,5760]] # 8 crates
      }
      metrics: {
        rms: {
          units: ADC
          #title: "TPC wire %(instance)s rms"
          display_range: [0, 10]
        }
	filtered_rms: {
          units: ADC
          #title: "TPC wire %(instance)s rms"
          display_range: [0, 10]
        }
        baseline: {
          units: ADC
          #title: "TPC wire %(instance)s baseline"
          display_range: [1990, 2040]
        }
        next_channel_dnoise: {
          #title: "TPC wire %(instance)s next channel dnoise"
          display_range: [0.2, 1.2]
        }
        mean_peak_height: {
          units: ADC
          #title: "TPC wire %(instance)s mean peak height"
          display_range: [0, 50]
        }
        occupancy: {
          #title: "TPC wire %(instance)s occupancy"
          display_range: [0., 1.]
        }
      }
    }
    SelectEvents: [tpc_only]
  }

  TPCOnlineAnalysisDenoised:{
    module_type: OnlineAnalysis
    group_name: tpc_channel
    @table::analysis_config

    raw_digit_producers: [@sequence::tpclabels_DecoderDenoised]

    #raw_digit_instance: ""

    metric_prefix: filtered_

    send_peakheight: false
    send_baseline: false
    send_occupancy: false
    send_dnoise: false
    
    SelectEvents: [tpc_only]
  }

  CRTAna:{
    module_type: BernCRTdqm

    metric_board_config: {
      groups:{
        CRT_board:[[1,97]] //1, 3-11, 13-17, 19, 21-97
      }                  //missing 2, 12, 18, 20
      streams:[archiving]
				
      metrics:{
        TS0:{}
	TS1:{}
	n_events:{}
	MaxADCValue:{}
	baseline:{}

	earlysynch:{alarmrange: [-100000,100000] }
	latesynch:{ alarmrange: [-100000,100000] }

	lastbighit:{ alarmrange: [0,100000000] }
      }
    }

    metric_channel_config: {
      groups:
      {
        CRT_channel:[[0,256]]
      }
      streams:[archiving]
      
      metrics:{
        ADC:{
          display_range: [0, 5000]
        }
      }	
    }
  }

}

physics.pscale_OnMonFiles:    [prescale20, daqTPC ]
physics.online_purity:   [prescale2,  daqTPC, purityana0, purityana1]
physics.tpc_only: [ prescale2, daqTPC ]
physics.pmt_only: [ daqPMT ]
physics.trigger_only: [ daqTrigger ]

# BH: COMMENT PSCALE_OnMonFiles TO TURN OFF OUTPUT FILE
physics.tpc_path: [ pscale_OnMonFiles, online_purity, tpc_only ]
physics.trigger_path: [trigger_only]
physics.pmt_path: [ pmt_only ]

physics.trigger_paths: [ @sequence::physics.tpc_path,
		         @sequence::physics.pmt_path,
			 @sequence::physics.trigger_path]


physics.anatpc: [ TPCOnlineAnalysis, TPCOnlineAnalysisDenoised, OnlineAnalysisRawData, Meta, PurityAnalysis ]
physics.anatrigger: [ triggerAnalysis ]
physics.anapmt: [ MetaPMT, pmtAnalysis ]
physics.anacrt: [ CRTAna ]

physics.a: [ @sequence::physics.anatrigger, @sequence::physics.anatpc, @sequence::physics.anapmt, @sequence::physics.anacrt ]
#physics.a: [ @sequence::physics.anatrigger, @sequence::physics.anatpc, @sequence::physics.anapmt ]

physics.decoded_stream: [ decodedout ]

physics.end_paths: [ a, decoded_stream ] # BH: COMMENT DECODED_STREAM TO TURN OFF OUTPUT FILE
#physics.end_paths: [ anatpc, decoded_stream ] # BH: COMMENT DECODED_STREAM TO TURN OFF OUTPUT FILE
#physics.end_paths: [ anapmt, decoded_stream ] # BH: COMMENT DECODED_STREAM TO TURN OFF OUTPUT FILE

process_name: ICARUSOnlineMonitor

#PMT overrides for the online
#physics.producers.daqPMT.DecoderTool.PMTconfigTag: @erase
#physics.producers.daqPMT.DecoderTool.RequireKnownBoards: false
#physics.producers.daqPMT.DecoderTool.RequireBoardConfig: false
